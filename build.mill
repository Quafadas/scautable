package build

import $ivy.`de.tototec::de.tobiasroeser.mill.vcs.version::0.4.0`

import mill._, mill.scalalib._, mill.scalajslib._
import mill._, scalalib._, publish._

import de.tobiasroeser.mill.vcs.version._

import $packages._

object Config {
  val oslib = ivy"com.lihaoyi::os-lib:0.11.4"
  val scalatags = ivy"com.lihaoyi::scalatags::0.13.1"
  val fansi = ivy"com.lihaoyi::fansi::0.5.1"



  val laminar = ivy"com.raquo::laminar::17.2.1"
  val munit = ivy"org.scalameta::munit::1.1.1"
  val scalaVersion = "3.7.1"
  val scalaJSVersion = "1.19.0"
}

//  mill --import ivy:com.lihaoyi::mill-contrib-bloop: mill.contrib.bloop.Bloop/install
trait Common extends ScalaModule {
  def scalaVersion = Config.scalaVersion

  override def ivyDeps = super.ivyDeps() ++ Agg(
    Config.scalatags,
    Config.oslib,
    Config.fansi
  )
  override def scalacOptions: T[Seq[String]] = super.scalacOptions() ++ Seq("-Xmax-inlines", "128")
}


trait CommonJS extends Common with ScalaJSModule {
  def scalaJSVersion = "1.19.0"
  override def ivyDeps = super.ivyDeps() ++ Agg(
    ivy"org.scala-js::scalajs-dom::2.8.0",
    ivy"org.scala-js::scalajs-java-securerandom::1.0.0".withDottyCompat(scalaVersion()),
    Config.laminar
  )
}


trait PublishModule extends mill.scalalib.PublishModule {
  override def artifactName = "scautable"

  override def publishVersion = T{ VcsVersion.vcsState().format() }

  override def pomSettings = T {
    PomSettings(
      description = "Automatically generate html tables from scala case classes",
      organization = "io.github.quafadas",
      url = "https://github.com/Quafadas/scautable",
      licenses = Seq(License.`Apache-2.0`),
      versionControl = VersionControl.github("quafadas", "scautable"),
      developers = Seq(
        Developer("quafadas", "Simon Parten", "https://github.com/quafadas")
      )
    )
  }

}

trait CommonTests extends TestModule.Munit {

  // override def testFramework = "munit.runner.Framework"
  override def ivyDeps = super.ivyDeps() ++ Agg(
    Config.munit
  )
}

trait ShareCompileResources extends ScalaModule {
  override def compileResources = super.compileResources() ++ resources()
}